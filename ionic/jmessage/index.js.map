{"version":3,"sources":["../../../src/@ionic-native/plugins/jmessage/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["/**\r\n *\r\n * TODO:\r\n * - Add Promise callback params type\r\n * - Add ChatRoom API\r\n * - Test ionic plugin\r\n * - Remove this note\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Plugin,\r\n  Cordova,\r\n  CordovaProperty,\r\n  IonicNativePlugin\r\n} from '@ionic-native/core';\r\n\r\n\r\nexport interface JMSingleType {\r\n  type: 'single';\r\n  username: string;\r\n  appKey?: string;\r\n};\r\n\r\nexport interface JMGroupType {\r\n  type: 'group';\r\n  groupId: string;\r\n};\r\n\r\nexport interface JMChatRoomType {\r\n  type: 'chatRoom';\r\n  roomId: string;\r\n};\r\n\r\nexport type JMAllType = (JMSingleType | JMGroupType | JMChatRoomType);\r\n\r\nexport interface JMMessageOptions {\r\n  extras?: { [key: string]: string; };\r\n  messageSendingOptions?: JMMessageSendOptions;\r\n};\r\n\r\nexport interface JMConfig {\r\n  isOpenMessageRoaming: boolean;\r\n};\r\n\r\nexport interface JMError {\r\n  code: string;\r\n  description: string;\r\n};\r\n\r\n/**\r\n * Message type\r\n */\r\n\r\nexport interface JMNormalMessage {\r\n  id: string;                      // 本地数据库中的消息 id\r\n  serverMessageId: string;          // 对应服务器端的消息 id\r\n  isSend: boolean;                 // 消息是否由当前用户发出。true：为当前用户发送；false：为对方用户发送。\r\n  from: JMUserInfo;                // 消息发送者对象\r\n  target: (JMUserInfo | JMGroupInfo); // 消息接收者对象\r\n  createTime: number;             // 发送消息时间\r\n  extras?: { [key: string]: string; };                  // 附带的键值对\r\n};\r\n\r\nexport type JMTextMessage = JMNormalMessage & {\r\n  type: 'text';\r\n  text: string;                   // 消息内容\r\n};\r\n\r\nexport type JMVoiceMessage = JMNormalMessage & {\r\n  type: 'voice';\r\n  path?: string;                   // 语音文件路径,如果为空需要调用相应下载方法\r\n  duration: number;                 // 语音时长，单位秒\r\n};\r\n\r\nexport type JMImageMessage = JMNormalMessage & {\r\n  type: 'image';\r\n  thumbPath?: string;               // 图片的缩略图路径, 如果为空需要调用相应下载方法\r\n};\r\n\r\nexport type JMFileMessage = JMNormalMessage & {\r\n  type: 'file';\r\n  fileName: string;                 // 文件名\r\n};\r\n\r\nexport type JMLocationMessage = JMNormalMessage & {\r\n  type: 'location';\r\n  longitude: number;              // 经度\r\n  latitude: number;               // 纬度\r\n  scale: number;                   // 地图缩放比例\r\n  address?: string;               // 详细地址\r\n};\r\n\r\nexport type JMCustomMessage = JMNormalMessage & {\r\n  type: 'custom';\r\n  customObject: { [key: string]: string; }            // 自定义键值对\r\n};\r\n\r\nexport interface JMEventMessage {\r\n  type: 'event';           // 消息类型\r\n  eventType: 'group_member_added' | 'group_member_removed' | 'group_member_exit';       // 'group_member_added' / 'group_member_removed' / 'group_member_exit'\r\n  usernames: JMUserInfo[];         // 该事件涉及到的用户 username 数组\r\n};\r\n\r\nexport type JMAllMessage = JMTextMessage | JMVoiceMessage | JMImageMessage | JMFileMessage | JMEventMessage;\r\n\r\nexport type JMMessageEventListener = (message: JMAllMessage) => void;\r\n\r\nexport type JMSyncOfflineMessageListener = (event: {\r\n  conversation: JMConversationInfo;\r\n  messageArray: JMAllMessage[];\r\n}) => void;\r\n\r\nexport type JMSyncRoamingMessageListener = (event: {\r\n  conversation: JMConversationInfo;\r\n}) => void;\r\n\r\nexport type JMLoginStateChangedListener = (event: {\r\n  type: 'user_password_change' | 'user_logout' | 'user_deleted' | 'user_login_status_unexpected';\r\n}) => void;\r\n\r\nexport type JMContactNotifyListener = (event: {\r\n  type: 'invite_received' | 'invite_accepted' | 'invite_declined' | 'contact_deleted';\r\n  reason: string;\r\n  fromUsername: string;\r\n  fromUserAppKey?: string;\r\n}) => void;\r\n\r\nexport type JMMessageRetractListener = (event: {\r\n  conversation: JMConversationInfo;\r\n  retractedMessage: JMAllMessage;\r\n}) => void;\r\n\r\nexport type JMReceiveTransCommandListener = (event: {\r\n  message: string;\r\n  sender: JMUserInfo;\r\n  receiver: JMUserInfo | JMGroupInfo;\r\n  receiverType: 'single' | 'group';\r\n}) => void;\r\n\r\nexport type JMReceiveChatRoomMessageListener = (event: {\r\n  messageArray: JMAllMessage[];\r\n}) => void;\r\n\r\n\r\nexport type JMReceiveApplyJoinGroupApprovalListener = (event: {\r\n  eventId: string;\r\n  groupId: string;\r\n  isInitiativeApply: boolean;\r\n  sendApplyUser: JMUserInfo;\r\n  joinGroupUsers?: JMUserInfo[];\r\n  reason?: string;\r\n}) => void;\r\n\r\nexport type JMReceiveGroupAdminRejectListener = (event: {\r\n  groupId: string;\r\n  groupManager: JMUserInfo;\r\n  reason?: string;\r\n}) => void;\r\n\r\nexport type JMReceiveGroupAdminApprovalListener = (event: {\r\n  isAgree: boolean;\r\n  applyEventId: string;\r\n  groupId: string;\r\n  groupAdmin: JMUserInfo;\r\n  users: JMUserInfo[];\r\n}) => void;\r\n/**\r\n * User Type\r\n */\r\nexport interface JMUserInfo {\r\n  type: 'user';\r\n  username: string;           // 用户名\r\n  appKey?: string;             // 用户所属应用的 appKey，可与 username 共同作为用户的唯一标识\r\n  nickname?: string;           // 昵称\r\n  gender: 'male' | 'female' | 'unknown';             // 'male' / 'female' / 'unknown'\r\n  avatarThumbPath: string;    // 头像的缩略图地址\r\n  birthday?: number;           // 日期的毫秒数\r\n  region?: string;             // 地区\r\n  signature?: string;          // 个性签名\r\n  address?: string;            // 具体地址\r\n  noteName?: string;           // 备注名\r\n  noteText?: string;           // 备注信息\r\n  isNoDisturb: boolean;       // 是否免打扰\r\n  isInBlackList: boolean;     // 是否在黑名单中\r\n  isFriend: boolean;          // 是否为好友\r\n  extras?: { [key: string]: string; };              // 自定义键值对\r\n};\r\n\r\nexport interface JMGroupMemberInfo {\r\n  user: JMUserInfo;                            // 群用户详情\r\n  groupNickname: string;                       // 用户的群昵称\r\n  memberType: 'owner' | 'admin' | 'ordinary';  // 用户类型\r\n  joinGroupTime: number;                       // 用户入群时间（单位：毫秒）\r\n}\r\n\r\nexport interface JMGroupInfo {\r\n  type: 'group';\r\n  id: string;                 // 群组 id\r\n  name?: string;               // 群组名称\r\n  desc?: string;               // 群组描述\r\n  level: number;              // 群组等级，默认等级 4\r\n  owner: string;              // 群主的 username\r\n  ownerAppKey?: string;        // 群主的 appKey\r\n  maxMemberCount: number;     // 最大成员数\r\n  isNoDisturb: boolean;       // 是否免打扰\r\n  isBlocked: boolean;          // 是否屏蔽群消息\r\n};\r\n\r\nexport interface JMChatRoomInfo {\r\n  type: 'chatRoom';\r\n  roomId: string;   // 聊天室 id\r\n  name: string;     // 聊天室名称\r\n  appKey?: string;   // 聊天室所属应用的 App Key\r\n  description?: string; // 聊天室描述信息\r\n  createTime: number; // 创建日期，单位：秒\r\n  maxMemberCount?: number; // 最大成员数\r\n  memberCount: number;     // 当前成员数\r\n};\r\n\r\nexport type JMConversationInfo = ({\r\n  conversationType: 'single';\r\n  target: JMUserInfo;\r\n} | {\r\n  conversationType: 'group';\r\n  target: JMGroupInfo;\r\n}) & {\r\n  title: string;                  // 会话标题\r\n  latestMessage: JMAllMessage;    // 最近的一条消息对象。如果不存在消息，则 conversation 对象中没有该属性。\r\n  unreadCount: number;            // 未读消息数\r\n};\r\n\r\nexport interface JMMessageSendOptions {\r\n  /**\r\n * 接收方是否针对此次消息发送展示通知栏通知。\r\n * @type {boolean}\r\n * @defaultvalue\r\n */\r\n  isShowNotification?: boolean;\r\n  /**\r\n   * 是否让后台在对方不在线时保存这条离线消息，等到对方上线后再推送给对方。\r\n   * @type {boolean}\r\n   * @defaultvalue\r\n   */\r\n  isRetainOffline?: boolean;\r\n  /**\r\n   * 是否开启了自定义接收方通知栏功能。\r\n   * @type {?boolean}\r\n   */\r\n  isCustomNotificationEnabled?: boolean;\r\n  /**\r\n   * 设置此条消息在接收方通知栏所展示通知的标题。\r\n   * @type {?string}\r\n   */\r\n  notificationTitle?: string;\r\n  /**\r\n   * 设置此条消息在接收方通知栏所展示通知的内容。\r\n   * @type {?string}\r\n   */\r\n  notificationText?: string;\r\n};\r\n\r\n// TODO: to Promise\r\n\r\nexport class JMChatRoom {\r\n\r\n  @Cordova()\r\n  getChatRoomInfoListOfApp(params: {\r\n    start: number;\r\n    count: number;\r\n  }, success: (chatroomList: JMChatRoomInfo[]) => void, fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  getChatRoomInfoListOfUser(\r\n    success: (chatroomList: JMChatRoomInfo[]) => void,\r\n    fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  getChatRoomInfoListById(params: {\r\n    roomId: string;\r\n  }, success: (chatroomList: JMChatRoomInfo[]) => void, fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  getChatRoomOwner(params: {\r\n    roomId: string;\r\n  }, success: (chatroomList: JMUserInfo) => void, fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  enterChatRoom(obj: {\r\n    roomId: string;\r\n  }, success: (conversation: JMConversationInfo) => void, fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  exitChatRoom(params: {\r\n    roomId: string;\r\n  }, success: () => void, fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  getChatRoomConversation(params: {\r\n    roomId: string;\r\n  }, success: () => void, fail: (error: JMError) => void): void {}\r\n\r\n  @Cordova()\r\n  getChatRoomConversationList(success: (conversationList: JMConversationInfo[]) => void, fail: (error: JMError) => void): void {}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n/**\r\n * @name jmessage\r\n * @description\r\n * This plugin does something\r\n */\r\n@Plugin({\r\n  pluginName: 'JMessagePlugin',\r\n  plugin: 'jmessage-phonegap-plugin',\r\n  pluginRef: 'JMessage',\r\n  repo: 'https://github.com/jpush/jmessage-phonegap-plugin',\r\n  install: 'cordova plugin add jmessage-phonegap-plugin --variable APP_KEY=your_app_key', // OPTIONAL install command, in case the plugin requires variables\r\n  installVariables: ['APP_KEY'],\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class JMessagePlugin extends IonicNativePlugin {\r\n\r\n  /**\r\n   * This function does something\r\n   * @param obj {string} Some param to configure something\r\n   * @param arg2 {number} Another param to configure something\r\n   * @return {Promise<any>} Returns a promise that resolves when something happens\r\n   */\r\n  @Cordova({\r\n     sync: true,\r\n     platforms: ['iOS', 'Android']\r\n    })\r\n  init(params: JMConfig): void { }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  setDebugMode(params: { enable: boolean; }): void {}\r\n\r\n  @Cordova()\r\n  register(params: {\r\n    username: string;\r\n    password: string;\r\n    nickname: string;\r\n  }): Promise<void> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  login(params: {\r\n    username: string;\r\n    password: string;\r\n  }): Promise<void> {\r\n    return;\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  logout(): void {}\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  setBadge(params: { badge: number; }): void { }\r\n\r\n  @Cordova()\r\n  getMyInfo(): Promise< JMUserInfo | {} > {\r\n    return; // We add return; here to avoid any IDE / Compiler errors\r\n  }\r\n\r\n\r\n  @Cordova()\r\n  getUserInfo(params: {\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<JMUserInfo> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  updateMyPassword(params: {\r\n    oldPwd: string;\r\n    newPwd: string;\r\n  }): Promise<void> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * 更新当前用户头像。\r\n   * @param {object} params = {\r\n   *  imgPath: string // 本地图片绝对路径。\r\n   * }\r\n   * 注意 Android 与 iOS 的文件路径是不同的：\r\n   *   - Android 类似：/storage/emulated/0/DCIM/Camera/IMG_20160526_130223.jpg\r\n   *   - iOS 类似：/var/mobile/Containers/Data/Application/7DC5CDFF-6581-4AD3-B165-B604EBAB1250/tmp/photo.jpg\r\n   */\r\n  @Cordova()\r\n  updateMyAvatar(params: {\r\n    imgPath: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  updateMyInfo(params: {\r\n    birthday?: number;\r\n    gender?: 'male' | 'female' | 'unknown';\r\n    extras?: { [key: string]: string; };\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  updateGroupAvatar(params: {\r\n    id: string;\r\n    imgPath: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadThumbGroupAvatar(params: {\r\n    id: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadOriginalGroupAvatar(params: {\r\n    id: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  setConversationExtras(params: JMAllType & { extras: { [key: string]: string; }; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendTextMessage(params: JMAllType & JMMessageOptions & { text: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendImageMessage(params: JMAllType & JMMessageOptions & { path: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendVoiceMessage(params: JMAllType & JMMessageOptions & { path: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendCustomMessage(params: JMAllType & JMMessageOptions & { customObject: { [key: string]: string; }; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendLocationMessage(params: JMAllType & JMMessageOptions & {\r\n    latitude: number;\r\n    longitude: number;\r\n    scale: number;\r\n    address: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendFileMessage(params: JMAllType & JMMessageOptions & {\r\n    path: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n\r\n  @Cordova()\r\n  retractMessage(params: JMAllType & { messageId: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getHistoryMessages(params: (JMSingleType | JMGroupType) & {\r\n    from: number;\r\n    limit: number;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getMessageById(params: JMAllType & { messageId: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  deleteMessageById(params: JMAllType & { messageId: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  sendInvitationRequest(params: {\r\n    username: string;\r\n    reason: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  acceptInvitation(params: {\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  declineInvitation(params: {\r\n    username: string;\r\n    reason: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n\r\n\r\n  @Cordova()\r\n  removeFromFriendList(params: {\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  updateFriendNoteName(params: {\r\n    username: string;\r\n    noteName: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  updateFriendNoteText(params: {\r\n    username: string;\r\n    noteText: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getFriends(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  createGroup(params: {\r\n    groupType?: 'public' | 'private';\r\n    name?: string;\r\n    desc?: string;\r\n  }): Promise<string> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getGroupIds(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getGroupInfo(params: { id: string; }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  updateGroupInfo(params: {\r\n    id: string;\r\n    newName: string;\r\n    newDesc?: string;\r\n  } | {\r\n      id: string;\r\n      newDesc: string;\r\n    }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  addGroupMembers(params: {\r\n    id: string;\r\n    usernameArray: string[];\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  removeGroupMembers(params: {\r\n    id: string;\r\n    usernameArray: string[];\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n\r\n  @Cordova()\r\n  exitGroup(params: {\r\n    id: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getGroupMembers(params: {\r\n    id: string;\r\n  }): Promise<JMGroupMemberInfo[]> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  addUsersToBlacklist(params: {\r\n    usernameArray: string[];\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  removeUsersFromBlacklist(params: {\r\n    usernameArray: string[];\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getBlacklist(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  setNoDisturb(params: (JMSingleType | JMGroupType) & {\r\n    isNoDisturb: boolean;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getNoDisturbList(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  setNoDisturbGlobal(params: {\r\n    isNoDisturb: boolean;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  isNoDisturbGlobal(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  blockGroupMessage(params: {\r\n    id: string;\r\n    isBlock: boolean;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  isGroupBlocked(params: {\r\n    id: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getBlockedGroupList(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadThumbUserAvatar(params: {\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadOriginalUserAvatar(params: {\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadThumbImage(params: (JMSingleType | JMGroupType) & {\r\n    messageId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadOriginalImage(params: (JMSingleType | JMGroupType) & {\r\n    messageId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadVoiceFile(params: (JMSingleType | JMGroupType) & {\r\n    messageId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  downloadFile(params: (JMSingleType | JMGroupType) & {\r\n    messageId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  createConversation(params: JMAllType): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  deleteConversation(params: JMAllType): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  enterConversation(params: JMSingleType | JMGroupType): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  exitConversation(params: JMSingleType | JMGroupType): void {}\r\n\r\n  @Cordova()\r\n  getConversation(params: JMAllType): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getConversations(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  resetUnreadMessageCount(params: JMAllType): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  transferGroupOwner(params: {\r\n    groupId: string;\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  setGroupMemberSilence(params: {\r\n    groupId: string;\r\n    isSilence: boolean;\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  isSilenceMember(params: {\r\n    groupId: string;\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  groupSilenceMembers(params: {\r\n    groupId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  setGroupNickname(params: {\r\n    groupId: string;\r\n    nickName: string;\r\n    username: string;\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * TODO:\r\n   * \r\n   * chatRoom internal api.\r\n   */\r\n  @CordovaProperty\r\n  ChatRoom: JMChatRoom;\r\n\r\n  @Cordova()\r\n  enterChatRoom(params: {\r\n    roomId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  exitChatRoom(params: {\r\n    roomId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getChatRoomConversation(params: {\r\n    roomId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getChatRoomConversationList(): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getAllUnreadCount(): Promise< { count: number; } > {\r\n    return; // We add return; here to avoid any IDE / Compiler errors\r\n  }\r\n\r\n  @Cordova()\r\n  addGroupAdmins(params: {\r\n    groupId: string;\r\n    usernames: string[];\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  removeGroupAdmins(params: {\r\n    groupId: string;\r\n    usernames: string[];\r\n    appKey?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  changeGroupType(params: {\r\n    groupId: string;\r\n    type: 'public' | 'private';\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  getPublicGroupInfos(params: {\r\n    appKey: string;\r\n    start: number;\r\n    count: number;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  applyJoinGroup(params: {\r\n    groupId: string;\r\n    reason?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  processApplyJoinGroup(params: {\r\n    events: string[];\r\n    isAgree: boolean;\r\n    isRespondInviter: boolean\r\n    reason?: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova()\r\n  dissolveGroup(params: {\r\n    groupId: string;\r\n  }): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addReceiveMessageListener(params: JMMessageEventListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeReceiveMessageListener(params: JMMessageEventListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addClickMessageNotificationListener(params: JMMessageEventListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeClickMessageNotificationListener(params: JMMessageEventListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addSyncOfflineMessageListener(params: JMSyncOfflineMessageListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeSyncOfflineMessageListener(params: JMSyncOfflineMessageListener): void {\r\n\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addSyncRoamingMessageListener(params: JMSyncRoamingMessageListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeSyncRoamingMessageListener(params: JMSyncRoamingMessageListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addLoginStateChangedListener(params: JMLoginStateChangedListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeLoginStateChangedListener(params: JMLoginStateChangedListener): void {\r\n  }\r\n\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addContactNotifyListener(params: JMContactNotifyListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeContactNotifyListener(params: JMContactNotifyListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addMessageRetractListener(params: JMMessageRetractListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeMessageRetractListener(params: JMMessageRetractListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addReceiveTransCommandListener(params: JMReceiveTransCommandListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeReceiveTransCommandListener(params: JMReceiveTransCommandListener): void {\r\n  }\r\n\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  addReceiveChatRoomMessageListener(params: JMReceiveChatRoomMessageListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n  removeReceiveChatRoomMessageListener(params: JMReceiveChatRoomMessageListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n   addReceiveApplyJoinGroupApprovalListener(params: JMReceiveApplyJoinGroupApprovalListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n   removeReceiveApplyJoinGroupApprovalListener(params: JMReceiveApplyJoinGroupApprovalListener): void {\r\n  }\r\n\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n   addReceiveGroupAdminRejectListener(params: JMReceiveGroupAdminRejectListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n   removeReceiveGroupAdminRejectListener(params: JMReceiveGroupAdminRejectListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n   addReceiveGroupAdminApprovalListener(params: JMReceiveGroupAdminApprovalListener): void {\r\n  }\r\n\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android']\r\n   })\r\n   removeReceiveGroupAdminApprovalListener(params: JMReceiveGroupAdminApprovalListener): void {\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}